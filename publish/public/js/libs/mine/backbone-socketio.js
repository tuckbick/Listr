Routr=function(){var a={};return{r:function(b,c){console.log("r",b,c);a[b]=c},incoming:function(b){console.log("incoming",b);console.log("getAction",b);(0,a[b.r][b.m])(b)}}}();Routr.r("items/",{get:function(a){Items.reset(a.data)},put:function(){}});var Store=function(){this.ops=["create","read","update","delete"];this.socket.on("error",function(a){console.error(a)});this.socket.on("rest",Routr.incoming)};
_.extend(Backbone.Collection.prototype,Backbone.Events,{fetch:function(a){a||(a={});var b=this,c=a.success;a.success=function(d){b[a.add?"add":"reset"](d,a);c&&c(b,d)};return(this.sync||Backbone.sync).call(this,"read",this,a)}});
_.extend(Store.prototype,{socket:io.connect(),requests:{},uri:function(a){return a.url()+(a.id?"/"+a.id:"")},event:function(a,b,c){rid=a+":"+this.uri(b);if(this.requests[rid])return!1;this.requests[rid]=c;return rid},request:function(a,b){this.socket.emit("rest",{m:a,r:b.url(),data:b.attributes||null})},done:function(a){self=this;return function(b){b?self.requests[a].success(b):self.requests[a].error(b);delete self.requests[a]}},create:function(a,b){(e=this.event("put",a,b))&&this.request("put",a,
e)},update:function(){},read:function(a){this.request("get",a)},"delete":function(a){this.request("delete",a)}});Backbone.sync=function(a,b,c){console.log("sync: ",arguments);var d=b.store||b.collection.store;if(_.contains(d.ops,a))d[a](b,c)};
